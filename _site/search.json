[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html",
    "href": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html",
    "title": "Demographic Visual Analysis",
    "section": "",
    "text": "City of Engagement, with a total population of 50,000, is a small city located at Country of Nowhere. The city serves as a service centre of an agriculture region surrounding the city. The main agriculture of the region is fruit farms and vineyards. The local council of the city is in the process of preparing the Local Plan 2023. A sample survey of 1000 representative residents had been conducted to collect data related to their household demographic and spending patterns, among other things. The city aims to use the data to assist with their major community revitalization efforts, including how to allocate a very large city renewal grant they have recently received."
  },
  {
    "objectID": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#participants-dataset",
    "href": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#participants-dataset",
    "title": "Demographic Visual Analysis",
    "section": "5.1 Participants Dataset",
    "text": "5.1 Participants Dataset\nThe spec() function will be used because newer versions of readr don’t report the full column specification when loading data files. This function will help us better understand the complete column specification.\nTo correct problematic columns, we will utilize dplyr::mutate to make necessary corrections:\n\nparticipantId is in <dbl> format. It should be reformatted to <factor>.\ninterestGroup is in <chr> format. It should be reformatted to <factor>.\neducationLevel is in <chr> format. It should be reformatted to factor, and ordered from low to high.\n\n\n\nCode\nspec(participants)\n\nparticipants <- participants %>% mutate_at(c('participantId', 'interestGroup', 'educationLevel'), as.factor)\n\nparticipants$educationLevel <- ordered(participants$educationLevel, levels = c(\"Low\", \"HighSchoolOrCollege\", \"Bachelors\", \"Graduate\"))\n\n\nIn order to have the flexibility to analyse the age variable in bands, we will also re-code the age variable into 10 year bands using the cut() function. The new variable is saved under age_band.\n\n\nCode\n# Recode ages into 10-year age bands\n# Define breaks and labels\nbreaks <- seq(10, 70, by = 10)\nlabels <- c(\"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60+\")\n\n# Recode age variable\nparticipants$age_band <- cut(participants$age, breaks = breaks, labels = labels)"
  },
  {
    "objectID": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#financialjournal-dataset",
    "href": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#financialjournal-dataset",
    "title": "Demographic Visual Analysis",
    "section": "5.2 FinancialJournal Dataset",
    "text": "5.2 FinancialJournal Dataset\nMuch like the Participants dataset, several problems were noted within the FinancialJournal dataset too. These included:\n\nparticipantId is in <dbl> format. It should be reformatted to <factor>.\ncategory is in <chr> format. It should be reformatted to <factor>.\n\n\n\nCode\nspec(finance)\nfinance <-finance %>% mutate_at(c('participantId', 'category'), as.factor)\n\n\nCurrently, the variable timestamp provides very micro level breakdown of spending pattern; down to the minute. This may not be useful when trying to understanding broad consumption patterns. As such, using lubridate::as.Date the timestamp variable was reformatted to “%Y-%m-%d” and a new variable, MonthYear was created to extract only the year and month data from timestamp.\n\n\nCode\nfinance$timestamp <- as.Date(finance$timestamp, format = \"%Y-%m-%d\")\n\n#Extracting month year\nfinance$MonthYear <- format(as.Date(finance$timestamp), \"%Y-%m\")\n\n\nThe Finance dataset also revealed 1,113 duplicated rows. To ensure accuracy in subsequent analyses, these rows will be eliminated using distinct(). The resulting trimmed dataset will be stored as fin_new.\n\n\nCode\nfin_new <- finance %>% distinct()\n\n\nThe amount variable in the FinancialJournal records money inflow and outflow as positive and negative numbers, respectively. This setup might lead to confusion while visualizing the data. To address this, we’ll process the data by taking the absolute values using abs().\n\n\nCode\nfin_new$amount <- abs(fin_new$amount)\n\n\nTo ensure the data’s completeness, we’re examining it at the participant level. The histogram displays a distinct cluster showing 131 participants with very few, nearly zero transactions. This could be due to participants dropping out of the study or relocating away from town. Considering the lack of financial data collected from these participants, they will be excluded from further analyses using the filter() function.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nfin_grouped <- fin_new %>%\n  group_by(participantId) %>%\n  dplyr::summarize(transaction_count = n()) %>%\n  arrange(transaction_count)\n\np <- ggplot(data=fin_grouped, \n       aes(x = transaction_count)) +\n  geom_histogram(bins = 39,\n                color=\"black\",      \n                fill=\"steelblue\") +\n  ggtitle(\"Distribution of Transactions among Participants\") +\n  xlab(\"Transaction Count\") + \n  ylab(\"Number of Participants\") +\n  theme_classic()\n\np <- ggplotly(p, tooltip=c(\"y\"))\n\n# display the plot\np\n\n\n\n\n\n\nCode\n# Find participant IDs in fin_grouped with transaction count < 500\nparticipants_to_remove <- fin_grouped %>%\n  filter(transaction_count < 500) %>%\n  pull(participantId)\n\n# Filter out rows in fin_new for those participants\nfin_new <- fin_new %>%\n  filter(!participantId %in% participants_to_remove)\n\n\nCurrently, the data is in a long format, with each row representing 1 transaction. We will transform the data using pivot_wider() to a wide format instead.\n\nfin_final <- fin_new %>%\n  group_by(participantId, category, MonthYear) %>%\n  summarise(Total = sum(amount))\n\nfin_final\n\n# A tibble: 21,627 × 4\n# Groups:   participantId, category [3,702]\n   participantId category  MonthYear Total\n   <fct>         <fct>     <chr>     <dbl>\n 1 0             Education 2022-03    38.0\n 2 0             Education 2022-04    38.0\n 3 0             Education 2022-05    38.0\n 4 0             Education 2022-06    38.0\n 5 0             Education 2022-07    38.0\n 6 0             Education 2022-08    38.0\n 7 0             Food      2022-03   253. \n 8 0             Food      2022-04   238. \n 9 0             Food      2022-05   251. \n10 0             Food      2022-06   247. \n# ℹ 21,617 more rows\n\n\n\nfin_final <- pivot_wider(\n  fin_final,names_from = category,values_from =Total)\nfin_final\n\n# A tibble: 5,118 × 8\n# Groups:   participantId [853]\n   participantId MonthYear Education  Food Recreation Shelter   Wage\n   <fct>         <chr>         <dbl> <dbl>      <dbl>   <dbl>  <dbl>\n 1 0             2022-03        38.0  253.       345.    555. 11932.\n 2 0             2022-04        38.0  238.       219.    555.  8637.\n 3 0             2022-05        38.0  251.       383.    555.  9048.\n 4 0             2022-06        38.0  247.       444.    555.  9048.\n 5 0             2022-07        38.0  255.      1047.    555.  8637.\n 6 0             2022-08        38.0  250.       295.    555.  9459.\n 7 1             2022-03        38.0  280.      1031.    555. 10359.\n 8 1             2022-04        38.0  208.       504.    555.  7590.\n 9 1             2022-05        38.0  165.       359.    555.  7951.\n10 1             2022-06        38.0  228.       675.    555.  7951.\n# ℹ 5,108 more rows\n# ℹ 1 more variable: RentAdjustment <dbl>\n\n\n\nfin_wide <- fin_final %>%\n  pivot_wider(names_from = MonthYear, values_from = c(Education, Food, Recreation, Shelter, Wage, RentAdjustment))\nfin_wide\n\n# A tibble: 853 × 37\n# Groups:   participantId [853]\n   participantId `Education_2022-03` `Education_2022-04` `Education_2022-05`\n   <fct>                       <dbl>               <dbl>               <dbl>\n 1 0                            38.0                38.0                38.0\n 2 1                            38.0                38.0                38.0\n 3 2                            12.8                12.8                12.8\n 4 3                            38.0                38.0                38.0\n 5 4                            12.8                12.8                12.8\n 6 5                            12.8                12.8                12.8\n 7 6                            12.8                12.8                12.8\n 8 7                            12.8                12.8                12.8\n 9 8                            12.8                12.8                12.8\n10 9                            91.1                91.1                91.1\n# ℹ 843 more rows\n# ℹ 33 more variables: `Education_2022-06` <dbl>, `Education_2022-07` <dbl>,\n#   `Education_2022-08` <dbl>, `Food_2022-03` <dbl>, `Food_2022-04` <dbl>,\n#   `Food_2022-05` <dbl>, `Food_2022-06` <dbl>, `Food_2022-07` <dbl>,\n#   `Food_2022-08` <dbl>, `Recreation_2022-03` <dbl>,\n#   `Recreation_2022-04` <dbl>, `Recreation_2022-05` <dbl>,\n#   `Recreation_2022-06` <dbl>, `Recreation_2022-07` <dbl>, …\n\n\n\n#convert all NA values to 0 \nfin_wide[is.na(fin_wide)] <- 0\n\nBefore merging, we will create the following new variables using mutate():\n\nTotal Expenditure across categories, across months e.g., TotExp_Mar\nTotal Earnings, across months e.g., TotEarn_Mar\nTotal Savings, across months calculated using TotEarn - TotExp for each month\n\n\n\nCode\n#Total expenditure across months\nfin_wide <- fin_wide %>%\n  mutate(\n    TotExp_Mar = `Education_2022-03` + `Food_2022-03` + `Recreation_2022-03` + `Shelter_2022-03`,\n    TotExp_Apr = `Education_2022-04` + `Food_2022-04` + `Recreation_2022-04` + `Shelter_2022-04`,\n    TotExp_May = `Education_2022-05` + `Food_2022-05` + `Recreation_2022-05` + `Shelter_2022-05`,\n    TotExp_Jun = `Education_2022-06` + `Food_2022-06` + `Recreation_2022-06` + `Shelter_2022-06`,\n    TotExp_Jul = `Education_2022-07` + `Food_2022-07` + `Recreation_2022-07` + `Shelter_2022-07`,\n    TotExp_Aug = `Education_2022-08` + `Food_2022-08` + `Recreation_2022-08` + `Shelter_2022-08`\n)\n\n#Total Earnings across months\nfin_wide <- fin_wide %>%\n  mutate(\n    TotEarn_Mar = `Wage_2022-03` + ifelse(is.na(`RentAdjustment_2022-03`), 0, `RentAdjustment_2022-03`),\n    TotEarn_Apr = `Wage_2022-04` + ifelse(is.na(`RentAdjustment_2022-04`), 0, `RentAdjustment_2022-04`),\n    TotEarn_May = `Wage_2022-05` + ifelse(is.na(`RentAdjustment_2022-05`), 0, `RentAdjustment_2022-05`),\n    TotEarn_Jun = `Wage_2022-06` + ifelse(is.na(`RentAdjustment_2022-06`), 0, `RentAdjustment_2022-06`),\n    TotEarn_Jul = `Wage_2022-07` + ifelse(is.na(`RentAdjustment_2022-07`), 0, `RentAdjustment_2022-07`),\n    TotEarn_Aug = `Wage_2022-08` + ifelse(is.na(`RentAdjustment_2022-08`), 0, `RentAdjustment_2022-08`))\n\n#Total Savings across months\nfin_wide <- fin_wide %>%\n  mutate(\n    TotSav_Mar = TotEarn_Mar - TotExp_Mar,\n    TotSav_Apr = TotEarn_Apr - TotExp_Apr,\n    TotSav_May = TotEarn_May - TotExp_May,\n    TotSav_Jun = TotEarn_Jun - TotExp_Jun,\n    TotSav_Jul = TotEarn_Jul - TotExp_Jul,\n    TotSav_Aug = TotEarn_Aug - TotExp_Aug\n  )"
  },
  {
    "objectID": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#combining-both-datasets",
    "href": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#combining-both-datasets",
    "title": "Demographic Visual Analysis",
    "section": "5.3 Combining both Datasets",
    "text": "5.3 Combining both Datasets\nFinally, utilizing inner_join(), the datasets (participants and fin_wide) will be merged, enabling comparisons of financial data across various demographic groups. The resulting dataset will be stored as final_data.\n\n\nCode\n# inner join the datasets\n# merge the datasets\nmerged <- merge(fin_wide, participants, by = \"participantId\", all.x = TRUE)\n\n# subset the merged dataset to keep only the rows with participantId in fin_wide\nfinal_data <- subset(merged, participantId %in% fin_wide$participantId)"
  },
  {
    "objectID": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#household-size-and-kids",
    "href": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#household-size-and-kids",
    "title": "Demographic Visual Analysis",
    "section": "6.1 Household Size and Kids",
    "text": "6.1 Household Size and Kids\nResidents of the city tended to have small families; no more than 3 members per household.\nAll families with 3 members have kids.\n\n\nCode\n# Calculate the proportion of respondents in each HHsize band category\nfinal_data$householdSize <- as.factor(final_data$householdSize)\nhousehold_props <- final_data %>%\n  group_by(householdSize) %>%\n  summarize(count = n()) %>%\n  mutate(prop = count / sum(count))\n\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np3 <- ggplot(household_props, aes(x = \"\", y = prop, fill = householdSize)) +\n  geom_bar(stat = \"identity\", width = 1, color = \"white\") +\n  coord_polar(theta = \"y\", start = 0, direction = -1) +\n  scale_fill_manual(values = c(\"pink1\", \"pink3\", \"pink4\")) +\n  theme_void() +\n  theme(legend.position = \"right\",\n        plot.title = element_text(size = 12, face = \"bold\", hjust = 0.5),\n        legend.title = element_text(size = 10, face = \"bold\"),\n        legend.text = element_text(size = 8)) +\n  labs(fill = \"Household Size\") +\n  geom_text(aes(label = paste0(round(prop*100), \"%\")), position = position_stack(vjust = 0.5), size = 3) +\n  ggtitle(\"Residents by Household Size(%)\")\np3\n\n\n\n\n\n# Calculate the percentage of households with kids for each household size\nhouseholdsize_kid_props <- final_data %>%\n  group_by(householdSize,haveKids) %>%\n  summarize(count = n()) %>%\n  mutate(prop = count / sum(count))\nhouseholdsize_kid_props\n\n# A tibble: 3 × 4\n# Groups:   householdSize [3]\n  householdSize haveKids count  prop\n  <fct>         <lgl>    <int> <dbl>\n1 1             FALSE      318     1\n2 2             FALSE      292     1\n3 3             TRUE       243     1"
  },
  {
    "objectID": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#age-and-education",
    "href": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#age-and-education",
    "title": "Demographic Visual Analysis",
    "section": "6.2 Age and Education",
    "text": "6.2 Age and Education\nThe age of residents living in the city were relatively evenly distributed, with close to one-third of the population (30%) made up by younger respondents below the ages of 30. Close to half were high school or college educated, while a similar proportion had a bachelor’s degree or higher.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Calculate the proportion of respondents in each age band category\nage_band_props <- final_data %>%\n  group_by(age_band) %>%\n  summarize(count = n()) %>%\n  mutate(prop = count / sum(count))\n\n# Create a pie chart with the age band proportions\np1 <- ggplot(age_band_props, aes(x = \"\", y = prop, fill = age_band)) +\n  geom_bar(stat = \"identity\", width = 1, color = \"white\") +\n  coord_polar(theta = \"y\", start = 0, direction = -1) +\n  scale_fill_manual(values = c(\"skyblue1\", \"skyblue2\", \"skyblue3\", \"skyblue4\", \"darkslategrey\", \"grey\")) +\n  theme_void() +\n  theme(legend.position = \"right\",\n        plot.title = element_text(size = 12, face = \"bold\", hjust = 0.5),\n        legend.title = element_text(size = 10, face = \"bold\"),\n        legend.text = element_text(size = 8)) +\n  labs(fill = \"Age Band\") +\n  geom_text(aes(label = paste0(round(prop*100), \"%\")), position = position_stack(vjust = 0.5), size = 3) +\n  ggtitle(\"Residents by Age Band (%)\")\n\n# Calculate the proportion of respondents in each education band category\neducation_props  <- final_data %>%\n  group_by(educationLevel) %>%\n  summarize(count = n()) %>%\n  mutate(prop = count / sum(count))\n\n# Create a pie chart with the age band proportions\np2 <- ggplot(education_props, aes(x = \"\", y = prop, fill = educationLevel)) +\n  geom_bar(stat = \"identity\", width = 1, color = \"white\") +\n  coord_polar(theta = \"y\", start = 0, direction = -1) +\n  scale_fill_manual(values = c(\"darkseagreen1\", \"darkseagreen2\", \"darkseagreen3\", \"darkseagreen4\")) +\n  theme_void() +\n  theme(legend.position = \"right\",\n        plot.title = element_text(size = 12, face = \"bold\", hjust = 0.5),\n        legend.title = element_text(size = 10, face = \"bold\"),\n        legend.text = element_text(size = 8)) +\n  labs(fill = \"Education Level\") +\n  geom_text(aes(label = paste0(round(prop*100), \"%\")), position = position_stack(vjust = 0.5), size = 3) +\n  ggtitle(\"Residents by Education Level(%)\")\n\n(p1 + p2)\n\n\n\n\nMoving forward, let’s investigate the potential correlation between age and education. Given the departure of age distribution from normality, we’ve opted for the non-parametric Kruskal-Wallis test. After examining the boxplots, it became evident that there isn’t a statistically significant correlation between these two variables.\n\n\n\n\n\n\nNote\n\n\n\nThis implies that the education levels among younger and older residents were similar. Given that education often relates to income, this discovery might indicate limited social mobility among the city’s residents. Consequently, we’ll delve into examining the connection between education and wage next\n\n\n\nPlotCodeNormality TestCode\n\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = final_data,\n  x = educationLevel, \n  y = age,\n  type = \"np\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE) +\n  theme_classic() +\n  theme(plot.title = element_text(size = 12, face = \"bold\", hjust = 0.5),\n       axis.title = element_text(size = 12),\n        axis.text = element_text(size = 7),\n        legend.position = \"none\") +\n  labs(x = \"Education Level\", y = \"Age\") +\n  ggtitle(\"Age by Education Level\")\n\n\n\n\n\n\n\n\n\n\n\n# Calculate Shapiro-Wilk test statistic and p-value\nsw_test <- shapiro.test(final_data$age)\nsw_stat <- sw_test$statistic\nsw_p <- sw_test$p.value\n\nggplot(final_data,\n       aes(sample=age)) +\n  stat_qq() +\n  stat_qq_line() +\n  annotate(\"text\", x = -1.5, y = -2.5, \n           label = paste(\"Shapiro-Wilk test:\", \"\\n\", \"statistic =\", round(sw_stat, 3), \"\\n\", \"p-value =\", format(sw_p, scientific = TRUE, digits = 3)), \n           hjust = 0, vjust = 0, size = 3, color = \"black\")+\n  ggtitle(\"Distribution - Age\") +\n  theme_classic() +\n  theme(plot.title = element_text(size = 12, face = \"bold\", hjust = 0.5),\n       axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10)) +\n  labs(y = \"Age\")"
  },
  {
    "objectID": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#education-and-income",
    "href": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#education-and-income",
    "title": "Demographic Visual Analysis",
    "section": "6.3 Education and Income",
    "text": "6.3 Education and Income\nTo further explore on income, let’s create a new variable mean_wage, which is calculated by using rowMeans() to find the average of all wage related columns.\n\n\nCode\n# Select the columns that contain wage information\nwage_cols <- grepl(\"^Wage\", names(final_data))\n\n# Calculate the average wage\nfinal_data$mean_wage <- rowMeans(final_data[, wage_cols], na.rm = TRUE)\n\n\nBefore proceeding with the confirmed data analysis, a prior check similar to earlier assessments was conducted to test the normality assumption for the average wage distribution among residents. The observed departure from normality in the distribution of average wages, as evident in the QQ plot, led to the decision to utilize a non-parametric test.\nAnalysis of the boxplot unveiled noticeable variations in residents’ wages across different education levels. Notably, individuals with higher educational attainment tended to earn considerably higher wages.\n\n\n\n\n\n\nNote\n\n\n\nEducation was found to have a positive correlation with wages. However, in section 6.2, it was observed that education levels across different age groups were not significantly different. To enhance citizens’ wages, the City of Engagement can consider implementing strategies to encourage the younger generation to pursue further studies.\n\n\n\nPlotCodeNormality TestCode\n\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = final_data,\n  x = educationLevel, \n  y = mean_wage,\n  type = \"np\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE) +\n  theme_classic() +\n  theme(plot.title = element_text(size = 12, face = \"bold\", hjust = 0.5),\n       axis.title = element_text(size = 12),\n        axis.text = element_text(size = 7),\n        legend.position = \"none\") +\n  labs(x = \"Education Level\", y = \"Income\") +\n  ggtitle(\"Income by Education Level\")\n\n\n\n\n\n\n\n\n\n\n\n# Select the columns that contain wage information\nwage_cols <- grepl(\"^Wage_20\", names(final_data))\n\n# Calculate the average wage\nfinal_data$mean_wage <- rowMeans(final_data[, wage_cols], na.rm = TRUE)\n\n# Calculate Shapiro-Wilk test statistic and p-value\nsw_test <- shapiro.test(final_data$mean_wage)\nsw_stat <- sw_test$statistic\nsw_p <- sw_test$p.value\n\nggplot(final_data,\n       aes(sample=mean_wage)) +\n  stat_qq() +\n  stat_qq_line() +\n  annotate(\"text\", x = -1.5, y = -2.5, \n           label = paste(\"Shapiro-Wilk test:\", \"\\n\", \"statistic =\", round(sw_stat, 3), \"\\n\", \"p-value =\", format(sw_p, scientific = TRUE, digits = 3)), \n           hjust = 0.5, vjust = -1.5, size = 3, color = \"black\")+\n  ggtitle(\"Distribution - Wage\") +\n  theme_classic() +\n  theme(plot.title = element_text(size = 12, face = \"bold\", hjust = 0.5),\n       axis.title = element_text(size = 12),\n        axis.text = element_text(size = 10)) +\n  labs(y = \"Wage\")"
  },
  {
    "objectID": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#overall-financial-health",
    "href": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#overall-financial-health",
    "title": "Demographic Visual Analysis",
    "section": "7.1 Overall Financial Health",
    "text": "7.1 Overall Financial Health\nIn order to analyze earning and spending overtime. A new dataframe named ‘Earn_Exp_avg’ with the following variables will be created:\n\nMonth: Date in ‘YYYY-MM’ format\nEducationLevel: No change from original data\nAvg_Earning: Average monthly earnings i.e., both wage and rentadjustments\nAvg_Expenditure: Average monthly expenditure\nAvg_Savings: Calculated variable deducting monthly expenditure from monthly earnings\n\n\n\nCode\n#Transform Earning Data to long form\nEarn_data_long <- final_data %>%\n  select(participantId, educationLevel, starts_with(\"TotEarn\")) %>%\n  gather(key = \"Month\", value = \"Earning\", starts_with(\"TotEarn\"))\n\nEarn_data_long_renamed <- Earn_data_long %>% \n  mutate(Month = case_when(\n    Month == \"TotEarn_Mar\" ~ \"2022-03\",\n    Month == \"TotEarn_Apr\" ~ \"2022-04\",\n    Month == \"TotEarn_May\" ~ \"2022-05\",\n    Month == \"TotEarn_Jun\" ~ \"2022-06\",\n    Month == \"TotEarn_Jul\" ~ \"2022-07\",\n    Month == \"TotEarn_Aug\" ~ \"2022-08\",\n    TRUE ~ Month\n  )) %>% \n  rename(Month_renamed = Month)\n\nEarn_data_long_renamed$Month <- as.Date(paste0(Earn_data_long_renamed$Month, \"-01\"), format = \"%Y-%m-%d\")\n\nEarn_data_long_renamed <- as_tibble(Earn_data_long_renamed)\n\n#Transform Exp Data to long form\nExp_data_long <- final_data %>%\n  select(participantId, educationLevel, starts_with(\"TotExp\")) %>%\n  mutate(across(starts_with(\"TotExp\"), ~coalesce(., 0))) %>%\n  gather(key = \"Month\", value = \"Expenditure\", starts_with(\"TotExp\"))\n\nExp_data_long_renamed <- Exp_data_long %>% \n  mutate(Month = case_when(\n    Month == \"TotExp_Mar\" ~ \"2022-03\",\n    Month == \"TotExp_Apr\" ~ \"2022-04\",\n    Month == \"TotExp_May\" ~ \"2022-05\",\n    Month == \"TotExp_Jun\" ~ \"2022-06\",\n    Month == \"TotExp_Jul\" ~ \"2022-07\",\n    Month == \"TotExp_Aug\" ~ \"2022-08\",\n    TRUE ~ Month\n  )) %>% \n  rename(Month_renamed = Month)\n\nExp_data_long_renamed$Month <- as.Date(paste0(Earn_data_long_renamed$Month, \"-01\"), format = \"%Y-%m-%d\")\n\nExp_data_long_renamed <- as_tibble(Exp_data_long_renamed)\n#sum(is.na(Exp_data_long_renamed$Expenditure))\n\n# Group and summarize earning data by month\nEarn_data_avg <- Earn_data_long_renamed %>% \n  group_by(Month, educationLevel) %>% \n  summarize(avg_earning = mean(Earning))\n\n# Group and summarize expenditure data by month\nExp_data_avg <- Exp_data_long_renamed %>% \n  group_by(Month, educationLevel) %>% \n  summarize(avg_expenditure = mean(Expenditure))\n\nEarn_Exp_avg <- full_join(Earn_data_avg, Exp_data_avg, \n                           by = c(\"educationLevel\", \"Month\"))\n\n# Create a new column for savings\nEarn_Exp_avg$savings <- Earn_Exp_avg$avg_earning - Earn_Exp_avg$avg_expenditure\n\n#Round values to 2dp\nEarn_Exp_avg$avg_expenditure <- round(Earn_Exp_avg$avg_expenditure, 2)\nEarn_Exp_avg$avg_earning <- round(Earn_Exp_avg$avg_earning, 2)\nEarn_Exp_avg$savings <- round(Earn_Exp_avg$savings, 2)\n\n#Rename Columns \nEarn_Exp_avg <- Earn_Exp_avg %>% rename(Education_Level = educationLevel, Avg_Earning = avg_earning, Avg_Expenditure = avg_expenditure, Avg_Savings = savings)\n\n\nThe charts below illustrate that residents’ monthly expenditures remained relatively constant across different education levels throughout the months. Despite an earnings surge in March, expenditure levels remained notably low. It’s worth highlighting that individuals with higher wages tended to save more monthly, as indicated in the highlighted yellow section, rather than increasing their spending.\n\n\n\n\n\n\nNote\n\n\n\nThis shows a good sign of financial health across all education levels.\n\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n# Create a ggplot object with the data\np <-ggplot(data = Earn_Exp_avg, aes(x = Month)) +\n  geom_line(aes(y = Avg_Earning, color = \"Avg_Earning\")) +\n  geom_line(aes(y = Avg_Expenditure, color = \"Avg_Expenditure\")) +\n  geom_ribbon(aes(ymin = Avg_Expenditure, ymax = Avg_Earning), fill = \"yellow\", alpha = 0.3) +\n  scale_color_manual(name = NULL, values = c(\"Avg_Earning\" = \"steelblue\", \"Avg_Expenditure\" = \"orange\"), \n                     labels = c(\"Average Earnings\", \"Average Expenditure\")) +\n  labs(title = \"Average Earnings and Expenditure per Month\",\n       x = \"Month\",\n       y = \"Amount\") +\n  theme_classic() +\n  facet_wrap(~ Education_Level, ncol = 1, scales = \"free_y\") +\n  ylim(0, 10000) +\n  scale_x_date(date_labels = \"%b %Y\", date_breaks = \"1 month\") +\n  theme(legend.position = \"bottom\",\n        plot.title = element_text(size = 12, face = \"bold\", hjust = 0.5),\n        axis.title = element_text(size = 10),\n        axis.text = element_text(size = 6))\n\n# Convert the ggplot object to an interactive plotly object and modify the hoverinfo argument\np <- ggplotly(p, height = 500, tooltip = c(\"Avg_Earning\", \"Avg_Expenditure\")) %>%\n  layout(hoverlabel = list(bgcolor = \"white\"))\n\n# Set the legend position to \"bottom\"\np <- layout(p, legend = list(orientation = \"h\", x = 0.25, y = -0.1))\n\n# Display the plot\np"
  },
  {
    "objectID": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#spending-pattern",
    "href": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#spending-pattern",
    "title": "Demographic Visual Analysis",
    "section": "7.2 Spending Pattern",
    "text": "7.2 Spending Pattern\nTo further examine on spending, let’s create a new dataframe called spending_summary:\n\nEducation\nFood\nRecreation\nShelter\nMean Spending\n\n\n\nCode\n# Create New variable for total average education expenditure\nfinal_data$Education <- rowMeans(final_data[c(\"Education_2022-03\", \"Education_2022-04\", \"Education_2022-05\",\"Education_2022-06\", \"Education_2022-07\", \"Education_2022-08\")])\n\n# Create New variable for total average food expenditure\nfinal_data$Food<- rowMeans(final_data[c(\"Food_2022-03\", \"Food_2022-04\", \"Food_2022-05\",\"Food_2022-06\", \"Food_2022-07\", \"Food_2022-08\")])\n\n# Create New variable for total average recreation expenditure\nfinal_data$Recreation<- rowMeans(final_data[c(\"Recreation_2022-03\", \"Recreation_2022-04\", \"Recreation_2022-05\",\"Recreation_2022-06\", \"Recreation_2022-07\", \"Recreation_2022-08\")])\n\n# Create New variable for total average shelter expenditure\nfinal_data$Shelter<- rowMeans(final_data[c(\"Shelter_2022-03\", \"Shelter_2022-04\", \"Shelter_2022-05\",\"Shelter_2022-06\", \"Shelter_2022-07\", \"Shelter_2022-08\")])\n\n# Round the result to 2 decimal places\nfinal_data$Education <- round(final_data$Education, 2)\nfinal_data$Food <- round(final_data$Food, 2)\nfinal_data$Recreation <- round(final_data$Recreation, 2)\nfinal_data$Shelter <- round(final_data$Shelter, 2)\n\n# Calculate the mean spending for each category\nmean_spending <- c(mean(final_data$Education), mean(final_data$Food), \n                   mean(final_data$Recreation), mean(final_data$Shelter))\n\n# Create a data frame with the mean spending for each category\nspending_summary <- data.frame(Category = c(\"Education\", \"Food\", \"Recreation\", \"Shelter\"),\n                               Mean_Spending = mean_spending)\n\n\nFrom the bar chart below, we see that a approximately half of total monthly expenditure was spent on shelter. This was followed by recreational activities, then food and lastly education.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n# Create a bar chart of the mean spending for each category\nspending_summary %>%\n  mutate(Category = reorder(Category, -Mean_Spending)) %>%\n  ggplot(aes(x = Category, y = Mean_Spending)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  geom_text(aes(label = paste0(\"$\", round(Mean_Spending, 2))), vjust = -0.5) +\n  ggtitle(\"Average Monthly Spending by Category\") +\n  xlab(\"Category\") +\n  ylab(\"Average Monthly Spending\") +\n  theme_classic() +  \n  theme(plot.title = element_text(size = 12, face = \"bold\", hjust = 0.5),\n        axis.title = element_text(size = 10),\n        axis.text = element_text(size = 10))"
  },
  {
    "objectID": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#financial-health-and-joviality",
    "href": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#financial-health-and-joviality",
    "title": "Demographic Visual Analysis",
    "section": "8.1 Financial Health and Joviality",
    "text": "8.1 Financial Health and Joviality\nLinking financial well-being to happiness seems reasonable. Let’s investigate the hypothesis that these variables have a positive correlation—that higher wealth or more savings correspond to greater happiness. However, the scatter plot presents a contrasting picture. Specifically, in the top-left corner, instances of residents with substantial savings exhibit low scores in joviality, indicating a contradiction to the expected positive relationship between savings and happiness.\n\n\n\n\n\n\nNote\n\n\n\nIn contrast to our initial hypothesis, there was a negative correlation discovered between monthly savings and joviality. This unexpected finding might be attributed to external stressors associated with higher-paying jobs. It could prove beneficial for the local council to engage with high earners in the city to offer more comprehensive support for their overall well-being.\n\n\n\nPlotCodeStatistical TestCode\n\n\n\n\n\n\n\n\n\n\n\n# Create New variable for Savings\nfinal_data$Avg_Savings <- rowMeans(final_data[, c(\"TotSav_Mar\", \"TotSav_Apr\", \"TotSav_May\",\"TotSav_Jun\", \"TotSav_Jul\", \"TotSav_Aug\")])\n\n# Round the result to 2 decimal places\nfinal_data$Avg_Savings <- round(final_data$Avg_Savings, 2)\n\nplot_ly(data = final_data, \n        x = ~joviality, \n        y = ~Avg_Savings,\n        color = ~educationLevel,\n        type = \"scatter\",\n        mode   = 'markers') %>%\n  add_trace(\n    text = ~paste(\"Joviality: \", joviality, \"<br>\",\n                  \"Avg Savings: $\", Avg_Savings),\n    hoverinfo = \"text\",\n    showlegend = FALSE\n  ) %>%\n  layout(\n    title = \"Correlation between Joviality and Savings by Education\",\n    xaxis = list(title = \"Joviality Score\"),\n    yaxis = list(title = \"Average Savings\"),\n    margin = list(l = 60, r = 10, t = 60, b = 30),\n    plot_bgcolor = \"white\",\n    paper_bgcolor = \"white\",\n    font = list(color = \"black\"),\n    hoverlabel = list(bgcolor = \"white\", font = list(color = \"black\")),\n    legend = list(title = \"Education Level\", font = list(color = \"black\"))\n  )\n\n\n\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = final_data,\n  x = joviality,\n  y = Avg_Savings,\n  marginal = FALSE,\n  ) + \nggtitle(\"Correlation betwen Joviality and Savings\") +\nlabs(x = \"Joviality Score\", y = \"Average Savings\")"
  },
  {
    "objectID": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#recreation-and-joviality",
    "href": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#recreation-and-joviality",
    "title": "Demographic Visual Analysis",
    "section": "8.2 Recreation and Joviality",
    "text": "8.2 Recreation and Joviality\nOther than financial stability, finding fulfillment in activities outside of work could be a significant contributor to happiness. To delve into this, we’re using expenditure on recreational activities as an indicator. This helps us examine whether individuals who allocate more towards recreational spending tend to report higher scores in joviality.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = final_data,\n  x = joviality,\n  y = Recreation,\n  marginal = FALSE,\n  ) + \nggtitle(\"Correlation betwen Joviality and Recreation\") +\nlabs(x = \"Joviality Score\", y = \"Recreation Expenditure\")\n\n\n\n\nBreaking down this relationship further by interest groups, we also observe that this positive correlation is true, across all groups.\n\n\n\n\n\n\nNote\n\n\n\nThis discovery indicates that active involvement in interest groups can lead to happier and more fulfilling lives. Hence, it’s crucial for the local council to focus on this aspect. For instance, understanding residents’ preferences and identifying existing infrastructure gaps can aid in better resource allocation and encourage increased participation in these activities.\n\n\n\nPlotData\n\n\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = final_data,\n  x = joviality,\n  y = Recreation,\n  marginal = FALSE,\n  ) + \n  ggtitle(\"Correlation between Joviality and Recreation Expenditure by Interest Groups\") +\n  labs(x = \"Joviality Score\", y = \"Recreation Expenditure\") +\n  facet_wrap(~interestGroup)"
  },
  {
    "objectID": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#age-and-joviality",
    "href": "Data_Analytics_Projects/Population Visual Analysis/Population_Visual_Analysis.html#age-and-joviality",
    "title": "Demographic Visual Analysis",
    "section": "8.3 Age and Joviality",
    "text": "8.3 Age and Joviality\nUpon reviewing the scatter plot below, a slight negative correlation seems apparent between age and joviality.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = final_data,\n  x = age,\n  y = joviality,\n  marginal = FALSE,\n  )\n\n\n\n\nUpon closer examination of the distribution of joviality scores categorized by 10-year age groups, a prominent peak is observable among residents in their 50s, suggesting a concentration of scores around 0.4 and below. Subsequently, this distribution gradually decreases as joviality scores increase.\n\n\n\n\n\n\nNote\n\n\n\nGiven that older residents have been significant contributors to the community, the data strongly implies a need for further investigation into the factors contributing to their lower joviality scores. Addressing the well-being of older residents not only ensures their proper care but also provides reassurance to younger residents, knowing that their parents are well looked after and that similar support will be available to them in the future.\n\n\n\nDistributionCode\n\n\n\n\n\n\n\n\n\n\nggplot(final_data, \n       aes(x = joviality, \n           y = age_band,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"Joviality Scores\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Simon Chiu",
    "section": "",
    "text": "Education\n\nSingapore Management University, Master of IT in Business (Data Analytics Track)\nNational Taiwan University, Bachelor of International Business\n\n\n\nExperience\n\nIHH Healthcare, Business Data Analyst Intern:\n\n\nConstructed Power BI ETL pipeline and dashboards\nDesigned Power Apps applications\nAnalyzed clinical data\n\n\nShopee, Digital Advertising Analyst Intern:\n\n\nPerformed online advertising on Shopee platform\nMentored over 100 clients in online advertising\n\n\nClarence Language Network, Project Manager Intern:\n\n\nInitiated SEO projects\nAnalyzed GA data\nManaged company website"
  },
  {
    "objectID": "Quarto_tutorial_articles/Quarto_Article1/Quarto_Article1.html",
    "href": "Quarto_tutorial_articles/Quarto_Article1/Quarto_Article1.html",
    "title": "How to build a Quarto website",
    "section": "",
    "text": "Step1: Install Git\nFirst, download Git.\nIf you already have Git, you can skip this step.\n\n\nStep2: Create a GitHub Account\nCreate GitHub account.\nThere are two things to note:\n\nUse your permanent email to create the account; don’t use your work or school account. This is to ensure you can always access your account and work.\nUse a simple GitHub username that doesn’t include spaces in the name.\n\nIf you already have a GitHub account, you can skip this step.\n\n\nStep3: Install RStudio\nInstall Rstudio (now it has a new name Posit).\nIf you already have Rstudio, you can skip this step.\n\n\nStep4: Setup RStudio\n\nOpen your RStudio. Click “File” and select “New Project” within Rstudio.\n\nSelect “New Directory”.\n\nSelect “Quarto Website”. (If there is no such option, you may need to update your Rstudio version. )\n\nFor “Directory name”, don’t include any space in the name.\n\nFor “Create projects as a subdirectory of”, click on “Browse” to select the folder with the same name as your GitHub username. If you haven’t created a folder with this name yet, please create one first. For instance, my GitHub username is “simonchiu902”, so I created a folder named “simonchiu902” and then used “Browse” to select this folder.\n\nMake sure other settings are the same as the screenshot and click on “Create Project”.\nAfter the above steps, Rstudio will direct you to your new project.\n\nIf you check your directory, you’ll find the following files have been created.\n\nNow, go back to your Rstudio and click “Build” and “Render Website”.\n\nA window will pop up and this is the draft of your website where we will further make changes.\n\n\n\n\nStep5: Set up Git\nWe are going to use Git within R for version control.\n\nType in “git config –global user.name” in the “Terminal” to check if you’re linking to the correct Github name.\n\nIf your output is empty or wrong, type “git config --global user.name”your_username”” in your terminal. (replace your_username with your correct username)\n\nType in “git config --global user.email” to check if the email is correct.\n\nIf not, then type “git config --global user.email”your_email”” in your terminal. (replace your_email with your correct email)\n\nClick “Tools” and “Install Packages” to install “devtools” and “usethis”\n\n\n\n\n\nType “usethis::use_git()” in your “Console”. (note that this time we use “Console”, not “Terminal” in previous steps)\n\nIt will ask you “Is it ok to commit them?”. We don’t want to commit now so select “No” by typing the corresponding number.\n\nThen it will ask you “A restart of RStudio is required to activate the Git pane. Restart now?”. Select “Yup” by entering the corresponding number.\n\nAfter restart, you can see a “Git” option is added on the upper right panel.\n\nCheck all items in the Git panel.\n\n\n\n\n\n\n\nTip\n\n\n\nclick on first item, press Shift and click the last item to select all items\n\n\n\n\n\nAfter selecting all items, click “Commit”.\n\nThe window will pop up. Fill in your desired comment in the “Commit message” and then click “Commit”. \nAfter “Commit”, go back to your Rstudio. There should be no more items under “Git”.\n\n\n\n\n\nStep6: Build Link to GitHub\n\nType “usethis::use_github()” in the Console. \nIf you encounter the following error, this may be because you lack a valid Github token. To solve this, please follow the following steps.\n\nType “usethis::create_github_token()” and this will direct you to a Github page.\n\nFill in your “Note” and set up “Expiration” days.\n\nScroll to the bottom of the page and click “Generate token”. This will direct you to a new page with a new generated token. Do not close this new page with your token, we’ll use it later.\n\nBack to your Rstudio, type “gitcreds::gitcreds_set()”.\n\nIn my case, I previously used some older and outdated credentials (tokens), triggering this message. I’ll proceed by choosing “Replace these credentials” and typing the associated number. If you haven’t entered any credentials previously, you might simply be prompted to input your new credentials directly into the console, allowing you to paste your newly generated credential.\n\nAfter I enter 2, it prompts me to enter my newly generated token. You can go back to the Github page showing the new token, copy and paste it in the console.\n\nAfter successfully render your token, type in “usethis::use_github()” again.\n\nThis time it should successfully direct you to Github and create a new repository for you.\n\n\n\n\nStep7: Use Netlify to publish your website\n\nSign up Netlify with your Github account.\n\nAfter signing in, it will direct you to this page.\n\nFind the “Add new site” button and click on “Import an existing project”.\n\nClick “Deploy with GitHub” and link Netify with your Github account.\n\nSelect your newly created repository.\n\nKeep all the settings unchanged, but specifically input “_site” into the “Publish directory” field. Click on “Deploy” to finish the setting.\n\nAfter you deploy the website, it will direct you to this page. The link is a random name and we can change it by clicking “Site configuration”.\n\nFind “Change site name” and change the url to your desired name.\n\n\nYou may need to wait a few minutes for Netify to process and then you can use the new URL to access your website.\n\n\n\nCredit\nI would like to acknowledge Dr. KAM Tin Seong for his guidance on utilizing Quarto, imparted during his Visual Analytics course at SMU. This tutorial is compiled based on his lectures, and I believe it’s valuable to share with individuals keen on exploring Quarto."
  },
  {
    "objectID": "Quarto_tutorial_articles/Quarto_Article2/Quarto_Article2.html",
    "href": "Quarto_tutorial_articles/Quarto_Article2/Quarto_Article2.html",
    "title": "Custom Quarto Website",
    "section": "",
    "text": "In this article, I will demonstrate how to customize your Quarto website, which was created following the tutorial in the initial article. If you haven’t read the first article, please access it through this link."
  },
  {
    "objectID": "Quarto_tutorial_articles/Quarto_Article2/Quarto_Article2.html#title",
    "href": "Quarto_tutorial_articles/Quarto_Article2/Quarto_Article2.html#title",
    "title": "Custom Quarto Website",
    "section": "3-1 Title",
    "text": "3-1 Title\nThe following two pictures illustrate how the code chunk is linked to a specific title section of the website.\n\n\nLet’s modify the code to “Simon Chiu Personal Website”.\n\nTo observe how this code alteration impacts the website, click on “Preview Website” within the “Build” section. Note that this change hasn’t been pushed to Github, it’s just a preview. We’ll cover how to save the change permanently at the end of this article.\n\nAfter clicking the “Preview Website” button, your updated preview website will pop up. The title of the website correspondingly reflects this change."
  },
  {
    "objectID": "Quarto_tutorial_articles/Quarto_Article2/Quarto_Article2.html#navigation-bar",
    "href": "Quarto_tutorial_articles/Quarto_Article2/Quarto_Article2.html#navigation-bar",
    "title": "Custom Quarto Website",
    "section": "3-2 Navigation Bar",
    "text": "3-2 Navigation Bar\n\n\nWe have the option to partition the navigation bar into two sections: left and right. Initially, we’ll concentrate on the left part. The first step involves establishing two primary labels: “Data Analytics Project” and “Quarto Tutorial Articles.” Beneath each primary label, we’ll create a corresponding sub-label (“Project 1” and “Article 1”). It’s important to note that the “href” attribute is utilized to link to specific files, necessitating the creation of Project 1.html and Article 1.html files. Detailed guidance on file creation will be provided in subsequent tutorial articles. Presently, our focus is solely on outlining the navigation bar structure.\n\n\nAs for the right part, we include two qmd files: index.qmd and about.qmd. Note that if we don’t include text:\"Home\" then the name of index.qmd shown on the website will be default to index."
  },
  {
    "objectID": "Quarto_tutorial_articles/Quarto_Article2/Quarto_Article2.html#theme",
    "href": "Quarto_tutorial_articles/Quarto_Article2/Quarto_Article2.html#theme",
    "title": "Custom Quarto Website",
    "section": "3-3 Theme",
    "text": "3-3 Theme\n\nThere are multiple built-in themes you can choose from Quarto - HTML Theming. \nFor example, if we change “cosmo” to “journal”, the website will look like this.\n\nIf you don’t like the theme’s navbar color, you can change the color by adding “background”."
  },
  {
    "objectID": "Quarto_tutorial_articles/Quarto_Article2/Quarto_Article2.html#icon",
    "href": "Quarto_tutorial_articles/Quarto_Article2/Quarto_Article2.html#icon",
    "title": "Custom Quarto Website",
    "section": "3-4 Icon",
    "text": "3-4 Icon\nIt’s common to include icons that link to your other profiles. For instance, you can enhance your navbar by incorporating GitHub and LinkedIn icons. Achieve this by inserting the following four lines of code into the right section of the navbar."
  },
  {
    "objectID": "Quarto_tutorial_articles/Quarto_Article2/Quarto_Article2.html#image",
    "href": "Quarto_tutorial_articles/Quarto_Article2/Quarto_Article2.html#image",
    "title": "Custom Quarto Website",
    "section": "4-1 Image",
    "text": "4-1 Image\nFirst, we have mentioned Title in 3-1, so let’s just start from image.\nTo insert a image, the first step is to create an “images” folder and place all the images you intend to use within this folder for better organization.\nNote that the directory of this “images” folder should match the location of the index.qmd file for the images to be properly referenced.\n\nThen put your picture into this “images” folder.\n\nTo reference this picture, we use the relative path: \"images/icon.png\" By doing so, the website can show the picture successfully."
  },
  {
    "objectID": "Quarto_tutorial_articles/Quarto_Article2/Quarto_Article2.html#about-template",
    "href": "Quarto_tutorial_articles/Quarto_Article2/Quarto_Article2.html#about-template",
    "title": "Custom Quarto Website",
    "section": "4-2 about: template",
    "text": "4-2 about: template\nThere are various kinds of templates can choose via Quarto official website.\nEven though these template were designed for about.qmd, I find that it’s also applicable to the index.qmd.\nIn my case, I choose trestles, which will make the outfit of index.qmd look like this:"
  },
  {
    "objectID": "Quarto_tutorial_articles/Quarto_Article2/Quarto_Article2.html#format-html-fontsize",
    "href": "Quarto_tutorial_articles/Quarto_Article2/Quarto_Article2.html#format-html-fontsize",
    "title": "Custom Quarto Website",
    "section": "4-3 format: html: fontsize",
    "text": "4-3 format: html: fontsize\nIf you observe the RStudio user interface, there isn’t an option to directly adjust font sizes within the text editor. You can only change the text format from normal to various header styles.\n\nWhat if the font size of the ‘Normal’ style is still too large?\nThat’s why we use format: html: fontsize to adjust the fontsize of “Normal”."
  },
  {
    "objectID": "Quarto_tutorial_articles/Quarto_Article2/Quarto_Article2.html#content",
    "href": "Quarto_tutorial_articles/Quarto_Article2/Quarto_Article2.html#content",
    "title": "Custom Quarto Website",
    "section": "4-4 Content",
    "text": "4-4 Content\nWe’ve completed the explanation of the top section of index.qmd. Let’s now proceed to discuss the main content.\n\nThere are two ways to edit your main content. First is using the Visual Editor. This provides you a more user-friendly UI interface.\n\nAlternatively, if you are familiar with markdown of Jupyter Notebook, you can choose the Source Editor.\nYou can find some common markdown options via this link."
  }
]